-   case: pyproject_toml_config
    main: |
        from myapp.models import MyModel
        mymodel = MyModel(user_id=1)
        reveal_type(mymodel.id)  # N: Revealed type is 'builtins.int*'
        reveal_type(mymodel.user)  # N: Revealed type is 'django.contrib.auth.models.User*'
        reveal_type(mymodel.objects)  # N: Revealed type is 'django.db.models.manager.Manager[myapp.models.MyModel]'
    mypy_config: |
        [mypy.plugins.django-stubs]
        django_settings_module = mysettings
    custom_settings: |
        SECRET_KEY = '1'
        INSTALLED_APPS = ('django.contrib.contenttypes', 'django.contrib.auth', 'myapp')
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from typing import TYPE_CHECKING
                from django.db import models
                class MyModel(models.Model):
                    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
                if TYPE_CHECKING:
                    reveal_type(MyModel().user)  # N: Revealed type is 'django.contrib.auth.models.User*'

-   case: generate_pyproject_toml_and_settings_file_from_installed_apps_key
    main: |
        from myapp.models import MyModel
        mymodel = MyModel(user_id=1)
        reveal_type(mymodel.id)  # N: Revealed type is 'builtins.int*'
    installed_apps:
        - django.contrib.auth
        - myapp
    files:
        - path: myapp/__init__.py
        - path: myapp/models.py
          content: |
              from django.db import models
              class MyModel(models.Model):
                  user = models.ForeignKey('auth.User', on_delete=models.CASCADE)

-   case: add_mypy_path_to_package_search
    main: |
        import extra_module
    mypy_config: |
        [mypy]
        mypy_path = ./extras
        [mypy.plugins.django-stubs]
        django_settings_module = mysettings
    files:
        -   path: extras/extra_module.py
            content: |
                def extra_fn():
                  pass

-   case: add_mypypath_env_var_to_package_search
    main: |
        import extra_module
    mypy_config: |
        [mypy.plugins.django-stubs]
        django_settings_module = mysettings
    env:
      - MYPYPATH=./extras
    files:
        -   path: extras/extra_module.py
            content: |
                def extra_fn():
                  pass
