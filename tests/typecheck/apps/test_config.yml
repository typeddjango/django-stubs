-   case: test_appconfig_can_be_str
    main: |
      from django.apps.config import AppConfig
      from django.utils.functional import cached_property

      class FooConfig(AppConfig):
          name = "foo"
          default_auto_field = "django.db.models.BigAutoField"

      class BarConfig(AppConfig):
          name = "foo"
          @property
          def default_auto_field(self) -> str: # type: ignore[override]
              return "django.db.models.BigAutoField"

      class BazConfig(AppConfig):
          name = "foo"
          @cached_property
          def default_auto_field(self) -> str: # type: ignore[override]
              return "django.db.models.BigAutoField"

      class FooBarConfig(AppConfig):
          name = "foo"
          default_auto_field = cached_property(lambda self: "django.db.models.BigAutoField")

      reveal_type(FooConfig.default_auto_field)  # N: Revealed type is "builtins.str"
      reveal_type(BarConfig("bar", None).default_auto_field)  # N: Revealed type is "builtins.str"
      reveal_type(BazConfig("baz", None).default_auto_field)  # N: Revealed type is "builtins.str"
      reveal_type(FooBarConfig("baz", None).default_auto_field)  # N: Revealed type is "builtins.str"
