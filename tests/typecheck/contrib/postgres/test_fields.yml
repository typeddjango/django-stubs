-   case: union_combinable_reduced_to_non_union
    main: |
        from typing import List
        from myapp.models import MyModel
        array_val: List[int] = [1]
        MyModel(array=array_val)  # E: Incompatible type for "array" of "MyModel" (got "List[int]", expected "Union[Sequence[str], Combinable]")  [misc]
        non_init = MyModel()
        non_init.array = array_val  # E: Incompatible types in assignment (expression has type "List[int]", variable has type "Union[Sequence[str], Combinable]")  [assignment]
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/models.py
            content: |
                from django.db import models
                from django.contrib.postgres.fields import ArrayField

                class MyModel(models.Model):
                    array = ArrayField(base_field=models.TextField())
-   case: postgres_forms_simple_array_field
    main: |
        from myapp.forms import MyForm
        MyForm()
    installed_apps:
        - myapp
    files:
        -   path: myapp/__init__.py
        -   path: myapp/forms.py
            content: |
                from django import forms
                from django.contrib.postgres.forms import SimpleArrayField

                class MyForm(forms.Form):
                    lots_of_dates = SimpleArrayField(forms.DateField(), required=False)
