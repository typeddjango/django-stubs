from argparse import ArgumentParser
from typing import Any, Optional, Sequence, Tuple

from django.core.management.base import BaseCommand

class TemplateCommand(BaseCommand):
    url_schemes: Sequence[str] = ...
    rewrite_template_suffixes: Sequence[Tuple[str, str]] = ...
    app_or_project: str
    a_or_an: str
    paths_to_remove: Sequence[Any]
    verbosity: Any = ...
    def add_arguments(self, parser: ArgumentParser) -> None: ...
    def handle(self, app_or_project: str, name: str, target: Optional[str] = ..., **options: Any) -> None: ...
    def handle_template(self, template: Optional[str], subdir: Optional[str]) -> str: ...
    def validate_name(self, name: str, name_or_dir: str = ...) -> None: ...
    def download(self, url: str) -> str: ...
    def splitext(self, the_path: str) -> Tuple[str, str]: ...
    def extract(self, filename: str) -> str: ...
    def is_url(self, template: str) -> bool: ...
    def make_writeable(self, filename: str) -> None: ...
