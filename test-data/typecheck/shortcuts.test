[CASE get_object_or_404_returns_proper_types]
from django.shortcuts import get_object_or_404, get_list_or_404
from django.db import models

class MyModel(models.Model):
    pass
reveal_type(get_object_or_404(MyModel))  # N: Revealed type is 'main.MyModel*'
reveal_type(get_object_or_404(MyModel.objects))  # N: Revealed type is 'main.MyModel*'
reveal_type(get_object_or_404(MyModel.objects.get_queryset()))  # N: Revealed type is 'main.MyModel*'

reveal_type(get_list_or_404(MyModel))  # N: Revealed type is 'builtins.list[main.MyModel*]'
reveal_type(get_list_or_404(MyModel.objects))  # N: Revealed type is 'builtins.list[main.MyModel*]'
reveal_type(get_list_or_404(MyModel.objects.get_queryset()))  # N: Revealed type is 'builtins.list[main.MyModel*]'
[/CASE]

[CASE get_user_model_returns_proper_class]
[env DJANGO_SETTINGS_MODULE=mysettings]
[disable_cache]
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from myapp.models import MyUser
from django.contrib.auth import get_user_model

UserModel = get_user_model()
reveal_type(UserModel.objects)  # N: Revealed type is 'django.db.models.manager.Manager[myapp.models.MyUser]'

[file mysettings.py]
from basic import *
INSTALLED_APPS = ('myapp',)

[file basic.py]
AUTH_USER_MODEL = 'myapp.MyUser'

[file myapp/__init__.py]
[file myapp/models.py]
from django.db import models
class MyUser(models.Model):
    pass
[/CASE]

[CASE return_type_model_and_show_error_if_model_not_yet_imported]
[env DJANGO_SETTINGS_MODULE=mysettings]
[disable_cache]
from django.contrib.auth import get_user_model

UserModel = get_user_model()
reveal_type(UserModel.objects)

[file mysettings.py]
INSTALLED_APPS = ('myapp',)
AUTH_USER_MODEL = 'myapp.MyUser'

[file myapp/__init__.py]
[file myapp/models.py]
from django.db import models
class MyUser(models.Model):
    pass
[out]
main:3: error: "myapp.MyUser" model class is not imported so far. Try to import it (under if TYPE_CHECKING) at the beginning of the current file
main:4: note: Revealed type is 'Any'
main:4: error: "Type[Model]" has no attribute "objects"
[/CASE]
